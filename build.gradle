plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'com.jrodmanu'
version = '1.3.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.2.4'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation "org.mockito:mockito-core:2.+"
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'mattermost-java-sdk'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'mattermost-java-sdk'
                description = 'Connects java to a Mattermost API'
                url = 'https://github.com/JrodManU/mattermost-java-sdk'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'JrodManU'
                        name = 'Jared Robbins'
                        email = 'jrodmanu@yahoo.com'
                    }
                }
                scm {
                    connection = 'https://github.com/JrodManU/mattermost-java-sdk.git'
                    developerConnection = 'git@github.com:JrodManU/mattermost-java-sdk.git'
                    url = 'https://github.com/JrodManU/mattermost-java-sdk'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("SONATYPE_USER")
                password = System.getenv("SONATYPE_PASS")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}